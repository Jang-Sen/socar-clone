services:
  nginx:
    container_name: nginx_js
    image: nginx:stable-alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/templates:/etc/nginx/templates
      - ./.cert/cert.pem:/etc/nginx/.cert/cert.pem
      - ./.cert/key.pem:/etc/nginx/.cert/key.pem
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    networks:
      - network_js

  backend:
    container_name: backend_js
    build:
      dockerfile: Dockerfile
      context: .
      target: development
    volumes:
      - .:/usr/src/app
    command: npm run start:dev
    env_file:
      - .env
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    depends_on:
      - postgres
      - redis
      - minio
    networks:
      - network_js

  postgres:
    container_name: postgres_js
    image: postgres:latest
    restart: always
    env_file:
      - .env
    ports:
      - "${POSTGRES_EXTERNAL_PORT}:${POSTGRES_PORT}"
    networks:
      - network_js

  redis:
    container_name: redis_js
    image: redis:alpine
    restart: always
    env_file:
      - .env
    ports:
      - "${REDIS_EXTERNAL_PORT}:${REDIS_PORT}"
    networks:
      - network_js

  minio:
    container_name: minio_js
    image: bitnami/minio
    env_file:
      - .env
    ports:
      - "9100:9000"
      - "9101:9001"
    networks:
      - network_js

networks:
  network_js:
    driver: bridge
    #    external: true
